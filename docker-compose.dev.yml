services:
  user-db:
    container_name: clinic-user-db
    image: postgres:15-alpine
    restart: always
    env_file: 
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db-data-users:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - clinic-network
    
  clinic-user-managment-ms:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    working_dir: /home/node/app
    container_name: clinic-user-managment-ms
    env_file: 
      - .env
    depends_on:
      user-db:
        condition: service_healthy
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - .:/home/node/app
    command: >
      sh -c "
        echo 'ðŸ”„ Esperando banco ficar disponÃ­vel...' &&
        /wait-for-it.sh user-db:5432 --strict --timeout=60 &&
        echo 'ðŸš€ Rodando migrations...' &&
        npm run typeorm migration:run && 
        echo 'âœ… Iniciando app...' &&
        npm run dev
      "
    networks:
      - clinic-network

volumes:
  db-data-users:

networks:
  clinic-network:
   external: true